language: node_js
node_js:
  - "8.12"
sudo: false
env:
  - NODE_ENV='test'
git:
  depth: 5
cache:
  bundler: true
  cocoapods: true
  podfile: ios/Podfile
  directories:
  - $HOME/.cache/yarn
matrix:
  # this matrix runs two processes in parallel, one for android, one for iOS
  include:
    - language: android
      os: linux
      dist: trusty
      jdk: oraclejdk8
      sudo: required
      node_js: false
      before_install:
        - openssl aes-256-cbc -K $encrypted_81656b5e166a_key -iv $encrypted_81656b5e166a_iv -in secrets.tar.enc -out secrets.tar -d
        - tar xvf secrets.tar --exclude android/gradle.properties
        # to prevent overwriting gradle.properties with the file from the tarball
        # we concatenate it to the end of the existing file (from git repo)
        - tar xvfO secrets.tar android/gradle.properties >> android/gradle.properties
        - nvm install node
        - node --version
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.17.3
        - export PATH="$HOME/.yarn/bin:$PATH"
        - gem install bundler
      install:
        - yarn install --frozen-lockfile
        - touch $HOME/.android/repositories.cfg
        # yes | sdkmanager 'system-images;android-28;google_apis;x86'
        # yes | sdkmanager 'system-images;android-25;google_apis;armeabi-v7a'
        - bundle install
      android:
        components:
          - tools
          - platform-tools
          - build-tools-28.0.3
          - android-28
          - extra-android-m2repository
          - extra-google-google_play_services
          - extra-google-m2repository
        licenses:
          - "android-sdk-preview-license-52d11cd2"
          - "android-sdk-license-.+"
          - "google-gdk-license-.+"
      before_script:
        - yarn lint
        - yarn flow
        - sudo sysctl fs.inotify.max_user_watches=524288
        - sudo sysctl -p
        # install tooling needed for detox, and run the detox tests
        - yarn global add react-native-cli
        - yarn global add detox-cli
        - echo $ANDROID_HOME
        # save git version so the app can show it to users
        - sed -ri "s/TRAVIS_COMMIT/$TRAVIS_COMMIT/" debugInfo.json
        - sed -ri "s/TRAVIS_TAG/$TRAVIS_TAG/" debugInfo.json
        # echo no | $ANDROID_HOME/tools/bin/avdmanager create avd --force -n ci_avd -k 'system-images;android-25;google_apis;armeabi-v7a' --abi armeabi-v7a -c 100M
        #- $ANDROID_HOME/tools/bin/avdmanager list avd
        # fix https://github.com/wix/Detox/issues/1157 with the next 2 lines
        # echo 'hw.lcd.height=900' >> ~/.android/avd/ci_avd.avd/config.ini
        # echo 'hw.lcd.width=500' >> ~/.android/avd/ci_avd.avd/config.ini
        # export ANDROID_EMULATOR_DEBUG=1
        # $ANDROID_HOME/emulator/emulator -version
        # $ANDROID_HOME/emulator/emulator @ci_avd -no-audio -no-window -verbose &
        # android-wait-for-emulator
        # adb shell input keyevent 82 &
        # detox build -c android.ci.debug
        # detox test -c android.ci.debug --loglevel trace
      script:
        # the following line is theoretically run by react-native cli > 0.60 but since we've
        # created custom build scripts, we still need it
        - yarn jetifier
        - yarn buildDev
        - yarn buildProd
        - cd android
      before_deploy:
        - find . -name *.apk
      deploy:
        - provider: releases
          # upload apk to github releases page, marking it as stable (not "prerelease") if it's not a beta tag
          name: $TRAVIS_TAG
          prerelease: false
          api_key:
            secure: ao6BfKCG0/QFDITW8cJ+cuHgWBP2UgOK3ONMmaLcRIih9h8ZZB5sRPL5epphUsMQVcc3p9+flUOcPGqAjC6xhk9+/MiTdk8733WmaKxAqvcEQzfoaWjAMRyOAByLYGyk1T9wCaHI5nvEQsdoxyL1i36J3QcSZ6cqbAwnFkAgJ4ovoCupNBrMC36PGMtzTNcGOQ1Vxcr+o/sxwF1ic4TbkvWCXwZmuStUvMIcjN+unXIuh9F0zcvEVVbt2ElFZkvzIdGhvWpdbOTujRldI5MgGU496sRniKY5gxVY91r2quTOG/C310RBBSmO904s8CHcT1y5R1ou+uUF0Zis0VMza/Atp3N/uPQYOjs88x6rZcqdsSjXP3XnrksdflMPuwqAI4ZbYZZ3GDveMEk58WOO24n2fGRszml+EuseB+zATDI8ZevefjjYOPQwk9IHoeSz3h0WSqnoK5/WHW+YImCPp9YZu+YMKNfrQEPlNbeKNRrsgwy3sOoOeIuUEb4MzdKPkdipggxhdck68eEU8Ynf9jWvoE6G1Ft4RIEG6ZZmYYsT3zxMHG0CbR9XW4wum/XZ+yXv7ONfQvmyo6Lf9b14fBDYScc/8gFSr3SAQAiwuLRKdf13SG3VB6uvrtz87VQg5PNdsNnG8cH5J5yFLGfERKTAZZa8b61vuD/xbD+UwZ4=
          file: "./app/build/outputs/apk/production/release/app-production-release.apk"
          skip_cleanup: true
          on:
            all_branches: true
            repo: mapswipe/mapswipe
            tags: true
            condition: $TRAVIS_TAG != *"beta"*
        - provider: releases
          # upload apk to github releases page, marking it as prerelease for the beta version
          name: $TRAVIS_TAG
          prerelease: true
          api_key:
            secure: ao6BfKCG0/QFDITW8cJ+cuHgWBP2UgOK3ONMmaLcRIih9h8ZZB5sRPL5epphUsMQVcc3p9+flUOcPGqAjC6xhk9+/MiTdk8733WmaKxAqvcEQzfoaWjAMRyOAByLYGyk1T9wCaHI5nvEQsdoxyL1i36J3QcSZ6cqbAwnFkAgJ4ovoCupNBrMC36PGMtzTNcGOQ1Vxcr+o/sxwF1ic4TbkvWCXwZmuStUvMIcjN+unXIuh9F0zcvEVVbt2ElFZkvzIdGhvWpdbOTujRldI5MgGU496sRniKY5gxVY91r2quTOG/C310RBBSmO904s8CHcT1y5R1ou+uUF0Zis0VMza/Atp3N/uPQYOjs88x6rZcqdsSjXP3XnrksdflMPuwqAI4ZbYZZ3GDveMEk58WOO24n2fGRszml+EuseB+zATDI8ZevefjjYOPQwk9IHoeSz3h0WSqnoK5/WHW+YImCPp9YZu+YMKNfrQEPlNbeKNRrsgwy3sOoOeIuUEb4MzdKPkdipggxhdck68eEU8Ynf9jWvoE6G1Ft4RIEG6ZZmYYsT3zxMHG0CbR9XW4wum/XZ+yXv7ONfQvmyo6Lf9b14fBDYScc/8gFSr3SAQAiwuLRKdf13SG3VB6uvrtz87VQg5PNdsNnG8cH5J5yFLGfERKTAZZa8b61vuD/xbD+UwZ4=
          file: "./app/build/outputs/apk/dev/release/app-dev-release.apk"
          skip_cleanup: true
          on:
            all_branches: true
            repo: mapswipe/mapswipe
            tags: true
            condition: $TRAVIS_TAG == *"beta"*
        - provider: script
          script: bundle exec fastlane deploy
          skip_cleanup: true
          on:
            repo: mapswipe/mapswipe
            tags: true
            branch: master
            condition: $TRAVIS_TAG != *"beta"*

    - language: objective-c
      os: osx
      osx_image: xcode11.3
      node_js: false
      env:
        - FASTLANE_DISABLE_COLORS=1
      podfile: ios/Podfile
      addons:
        ssh_known_hosts: gitlab.com
      before_install:
        - set -o pipefail
        - gem install bundler --pre
        - nvm install node
        - node --version
        - travis_retry npm install -g yarn
        - yarn -version
        # open the secret box with passwords and API keys. The path should include ios/cfg
        - openssl aes-256-cbc -K $encrypted_684f49268a62_key -iv $encrypted_684f49268a62_iv -in ios/cfg/secrets.tar.enc -out ios/cfg/secrets.tar -d
        - tar -xvf ios/cfg/secrets.tar -C ios/cfg
      install:
        - bundle install
        - bundle update
        - cat Gemfile.lock
        - travis_retry gem install xcpretty cocoapods
        #- travis_retry yarn install --frozen-lockfile
        # install tooling needed for detox
        - brew tap wix/brew
        - brew install applesimutils
        - yarn global add react-native-cli
        - yarn global add detox-cli
        # save git version so the app can show it to users
        - sed -i '' "s/TRAVIS_COMMIT/$TRAVIS_COMMIT/" debugInfo.json
        - sed -i '' "s/TRAVIS_TAG/$TRAVIS_TAG/" debugInfo.json
      script:
        - cd ios
        # try to hide some build warnings
        - export CLANG_WARN_COMMA=NO
        - export CLANG_WARN_DOCUMENTATION=NO
        # setup RSA key so we can clone the certificate repo in gitlab
        - eval "$(ssh-agent -s)"
        - chmod 600 cfg/mapswipe.dev_at_gmail_rsa_key_for_travis_ci
        - ssh-add cfg/mapswipe.dev_at_gmail_rsa_key_for_travis_ci
        # define a custom keychain for fastlane to use
        - export KEY_CHAIN=ios-build.keychain
        - security create-keychain -p travis $KEY_CHAIN
        - security default-keychain -s $KEY_CHAIN
        - security unlock-keychain -p travis $KEY_CHAIN
        - security set-keychain-settings -t 3600 -u $KEY_CHAIN
        # run the detox tests
        # detox build --configuration ios.sim.debug
        # detox test --configuration ios.sim.debug --cleanup
        # The test lane refreshes the development certificates, compiles the app and launches the unit tests.
        # Actual Tests have been disabled since Travis has issues launching the simulator, but the app is being compiled.
        - bundle exec fastlane ios matchProd
        - echo "123456789012345678901234567890"
        - bundle exec fastlane test
      before_deploy:
      deploy:
        # deploy the beta/dev build to testflight for all tagged commits
        - provider: script
          skip_cleanup: true
          script: bundle exec fastlane beta --verbose
          on:
            all_branches: true
            repo: mapswipe/mapswipe
            tags: true
            condition: $TRAVIS_TAG == *"beta"*
        # and for tagged commits to master, deploy to production
        - provider: script
          skip_cleanup: true
          script: fastlane release
          on:
            branch: master
            repo: mapswipe/mapswipe
            tags: true
            condition: $TRAVIS_TAG != *"beta"*
